@page "/add-movie"
@rendermode InteractiveServer
@inject MovieStore.Web.MovieService MovieService
@inject NavigationManager NavigationManager

<PageTitle>Add Movie</PageTitle>

<h1>Add New Movie</h1>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@newMovie" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            
            <div class="mb-3">
                <label for="title" class="form-label">Title</label>
                <InputText id="title" class="form-control" @bind-Value="newMovie.Title" />
                <ValidationMessage For="@(() => newMovie.Title)" />
            </div>
            
            <div class="mb-3">
                <label for="fileUpload" class="form-label">Select Movie File</label>
                <InputFile id="fileUpload" class="form-control" OnChange="@OnFileSelected" accept="video/*" />
                @if (!string.IsNullOrEmpty(selectedFileName))
                {
                    <div class="form-text text-success">Selected: @selectedFileName</div>
                }
            </div>
            
            <div class="mb-3">
                <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                    @if (isSubmitting)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <text> Adding...</text>
                    }
                    else
                    {
                        <text>Add Movie</text>
                    }
                </button>
                <a href="/movies" class="btn btn-secondary ms-2">Cancel</a>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @errorMessage
            </div>
        }

        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success" role="alert">
                @successMessage
            </div>
        }
    </div>
</div>

@code {
    private Movie newMovie = new Movie();
    private bool isSubmitting = false;
    private string? errorMessage;
    private string? successMessage;
    private IBrowserFile? selectedFile;
    private string? selectedFileName;

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        selectedFileName = e.File.Name;
        StateHasChanged();
    }

    private async Task HandleSubmit()
    {
        isSubmitting = true;
        errorMessage = null;
        successMessage = null;

        try
        {
            if (string.IsNullOrWhiteSpace(newMovie.Title))
            {
                errorMessage = "Title is required.";
                return;
            }

            if (selectedFile == null)
            {
                errorMessage = "Please select a file to upload.";
                return;
            }

            // Limit file size to 100MB
            const long maxFileSize = 100 * 1024 * 1024;
            if (selectedFile.Size > maxFileSize)
            {
                errorMessage = "File size cannot exceed 100MB.";
                return;
            }

            using var stream = selectedFile.OpenReadStream(maxFileSize);
            var result = await MovieService.AddMovieWithFileAsync(
                newMovie.Title, 
                stream, 
                selectedFile.Name, 
                selectedFile.ContentType,
                CancellationToken.None);
            
            if (result != null)
            {
                successMessage = $"Movie '{newMovie.Title}' has been added successfully!";
                newMovie = new Movie(); // Reset form
                selectedFile = null;
                selectedFileName = null;
                StateHasChanged();
                
                // Navigate to movies page after a short delay
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/movies");
            }
            else
            {
                errorMessage = "Failed to add the movie. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}